Exercise 9-3.
The purpose of this exercise is to review encapsulation and generalization (see
“Encapsulation and Generalization” on page 92). The following code fragment traver‐
ses a string and checks whether it has the same number of open and close parenthe‐
ses:

126 | Chapter 9: Strings and Things

String s = "((3 + 7) * 2)";
int count = 0;
for (int i = 0; i < s.length(); i++) {
char c = s.charAt(i);
if (c == '(') {
count++;
} else if (c == ')') {
count--;
}
}
System.out.println(count);
1. Encapsulate this fragment in a method that takes a string argument and returns
the final value of count.
2. Now that you have generalized the code so that it works on any string, what
could you do to generalize it more?
3. Test your method with multiple strings, including some that are balanced and
some that are not.


ANSWER:

package learn;

public class Main {

    public static void main(String[] args) {
        String phrase = "I really (truly) like programming (with Java)";
        System.out.println(charCount(phrase));
    }

    public static int charCount(String x) {
        int count = 0;
        for (int i = 0; i < x.length(); i++) {
            char c = x.charAt(i);
            if (c == '(') {
                count++;
            } else if (c == ')') {
                count--;
            }
        }
        return count;
    }
}

OUTPUT:
0 // BECAUSE THERE IS AN EQUAL NUMBER OF OPEN AND CLOSE PARENTHESIS
